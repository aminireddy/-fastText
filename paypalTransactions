import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;


public CimmCCSecureTokenResponse getSecureTokenV2(CimmCCSecureTokenRequest secureTokenRequest) throws ServiceUnAvailableException {
		
		CimmCCSecureTokenResponse cimmCCTransactionResponse = null;
		Map<String, String> responseMap=null;
		CimmAddressRequest billingAddressRequest=null;
		
		JsonObject jsonObject = this.getJsonObject();
		
		MultiValueMap<String, String> payPalRequestParameter = constructFormURLEncodedRequestParameter(jsonObject);
		String secureTokenId = CoreCommonUtil.generateUUID4();

		payPalRequestParameter.add(QUERY_PARAMETER_TRANSACTION_TYPE,secureTokenRequest.getAuthTypeAsEnum().getCode());
		payPalRequestParameter.add(QUERY_PARAMETER_CREATE_SECURE_TOKEN,this.getCreateSecureToken(jsonObject));		
		payPalRequestParameter.add(QUERY_PARAMETER_SECURE_TOKEN_ID,secureTokenId);		
		
		billingAddressRequest=secureTokenRequest.getBillingAddress();
		
		if(billingAddressRequest!=null){
			payPalRequestParameter.add(QUERY_PARAMETER_FIRSTNAME,billingAddressRequest.getFirstName()!=null?billingAddressRequest.getFirstName():EMPTY_STRING);	
			payPalRequestParameter.add(QUERY_PARAMETER_LASTNAME,billingAddressRequest.getLastName()!=null?billingAddressRequest.getLastName():EMPTY_STRING);	
			payPalRequestParameter.add(QUERY_PARAMETER_ADDRESS,billingAddressRequest.getAddressLine1()!=null?billingAddressRequest.getAddressLine1():EMPTY_STRING);	
			payPalRequestParameter.add(QUERY_PARAMETER_CITY,billingAddressRequest.getCity()!=null?billingAddressRequest.getCity():EMPTY_STRING);	
			payPalRequestParameter.add(QUERY_PARAMETER_STATE,billingAddressRequest.getState()!=null?billingAddressRequest.getState():EMPTY_STRING);	
			payPalRequestParameter.add(QUERY_PARAMETER_ZIP,billingAddressRequest.getZipCode()!=null?billingAddressRequest.getZipCode():EMPTY_STRING);	
		}
		
		if(secureTokenRequest.getAmount()!=null){
			payPalRequestParameter.add(QUERY_PARAMETER_AMOUNT,String.valueOf(secureTokenRequest.getAmount()));
		}

		String payPalRawRequest = constructRawRequest(payPalRequestParameter);

		ResponseEntity<String> payPalToken = restServiceClient.invoke(this,PayPalCallBackCode.PAYPAL_GET_TOKEN, 
				this.getBaseUrl(jsonObject),HttpMethod.POST,getHttpRequestEntity(jsonObject,payPalRawRequest),String.class);

		if(payPalToken != null) {
			responseMap=processResponse(payPalToken);
			cimmCCTransactionResponse=new CimmCCSecureTokenResponse();
			cimmCCTransactionResponse.setSecureToken(responseMap.get(SECURETOKEN_KEY));
			cimmCCTransactionResponse.setSecureTokenId(secureTokenId);
		}
		return cimmCCTransactionResponse;
	}

Pyapal we have we have three transactions
-Authorization
-Capute
-Voided


URI : https://payflowpro.paypal.com/
Request body : partner=PayPal&vendor=CNRGOSHeCOM&user=apiuser&pwd=Unilog12345&TENDER=C&amt=1.04&ORIGID=AA0O5A7983ED&PONUM=5-11819559161&INVNUM=&COMMENT1=STOREPICKUP&trxtype=A
Response body : RESULT=12&PNREF=AK0O8F8CC4F4&RESPMSG=Declined&AVSADDR=X&AVSZIP=X&TXID=301300277603993&IAVS=X

URI : https://payflowpro.paypal.com/
Request body : partner=PayPal&vendor=CNRGOSHeCOM&user=apiuser&pwd=Unilog12345&TENDER=C&amt=1.04&ORIGID=AA0O5A7983ED&PONUM=5-11819559161&INVNUM=&COMMENT1=STOREPICKUP&trxtype=C
Response body : RESULT=12&PNREF=AK0O8F8CC4F4&RESPMSG=Declined&AVSADDR=X&AVSZIP=X&TXID=301300277603993&IAVS=X

URI : https://payflowpro.paypal.com/
Request body : partner=PayPal&vendor=CNRGOSHeCOM&user=apiuser&pwd=Unilog12345&TENDER=C&amt=1.04&ORIGID=AA0O5A7983ED&PONUM=5-11819559161&INVNUM=&COMMENT1=STOREPICKUP&trxtype=V
Response body : RESULT=12&PNREF=AK0O8F8CC4F4&RESPMSG=Declined&AVSADDR=X&AVSZIP=X&TXID=301300277603993&IAVS=X

